<?xml version="1.0" encoding="utf-8"?>
<configuration>
 
  <configSections>
     <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  
  <connectionStrings>
    <add name="ESBPublicEntities" connectionString="metadata=res://*/ESBPublicModel.csdl|res://*/ESBPublicModel.ssdl|res://*/ESBPublicModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=192.168.209.54;initial catalog=MOL-ESB-Public;persist security info=True;user id=moldbuser;password=moldbuser;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient"/>
  </connectionStrings>

  <appSettings>
    <add key="UploaderTempFolderPath" value="c:\\RAMSTempUploadFiles\\" />
    <add key="UploaderFinalFolderPath" value="c:\\RAMSUploadFiles\\" />
  </appSettings>
 
  <system.web>
    <compilation debug="true" targetFramework="4.6.2" />
    <pages controlRenderingCompatibilityVersion="4.0"/>
    <httpRuntime targetFramework="4.6.1" />
  </system.web>
  <system.serviceModel>
  
    <bindings>
      <wsHttpBinding>
        <binding name="WSHttpBinding_IGetMessage">
          <security mode="Transport">
            <transport clientCredentialType="Digest"/>
          </security>
        </binding>
      </wsHttpBinding>
      
      <basicHttpBinding>
        <binding name="TransferService" maxReceivedMessageSize="2147483647" maxBufferSize="2147483647" transferMode="Streamed">
          <readerQuotas maxDepth="2147483647" maxStringContentLength="2147483647" maxArrayLength="2147483647" maxBytesPerRead="2147483647" maxNameTableCharCount="2147483647"/>
          <security mode="None"/>
        </binding>
      </basicHttpBinding>
      
    </bindings>

    <services>
      <service behaviorConfiguration="ServiceBehavior" name="RAMS.InfrastructureService.Get.GetSystemMessages">
        <endpoint address="" binding="basicHttpBinding" contract="RAMS.InfrastructureService.Get.IGetSystemMessages"/>      
      </service>

      <service behaviorConfiguration="FileTransferServiceBehavior" name="RAMS.InfrastructureService.FileTransfer.FileTransferService">
        <endpoint address="basic" binding="basicHttpBinding" bindingConfiguration="TransferService" contract="RAMS.InfrastructureService.FileTransfer.IFileTransferService" />
      </service>
    </services>

    <behaviors>
      <endpointBehaviors>
        <behavior name="AllowApi">
          <webHttp/>
        </behavior>
      </endpointBehaviors>
      
      <serviceBehaviors>
        <behavior name="ServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
        
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
        
        <behavior name="FileTransferServiceBehavior">
          <serviceMetadata httpGetEnabled="true"/>
          <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceThrottling maxConcurrentCalls="500" maxConcurrentSessions="500" maxConcurrentInstances="500"/>
        </behavior>
        
      </serviceBehaviors>
    </behaviors>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    
  </system.serviceModel>
  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <directoryBrowse enabled="true" />
  </system.webServer>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>